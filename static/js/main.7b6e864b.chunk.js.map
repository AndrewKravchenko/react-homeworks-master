{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h5/pages/Error404.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/HW5.module.css","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.module.css","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/AlternativeMessage.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h8/HW8.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","className","s","navmenu","to","Message","props","message","img","src","avatar","bubble","bubbleLeft","person","name","time","AlternativeMessage","aimg","aperson","messageData","messageDataAlternative","HW1","Affair","affair","priority","onClick","deleteAffairCallback","_id","SuperButton","red","restProps","finalClassName","superButton","default","Affairs","mappedAffairs","data","map","a","key","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","title","body","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","setOnBlur","inputClass","someClass","value","onChange","errorMessage","count","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","alert","HW3","setUsers","console","log","newUser","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","finalSpanClassName","finalInputClassName","superInput","errorInput","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","input","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","spanClass","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PreJunior","Error404","h","error404","SuperSelect","options","onChangeOption","mappedOptions","opt","superSelect","SuperRadio","onChangeCallback","o","i","superRadio","arr","HW7","homeWorkReducer","action","sort","b","payload","p","age","initialPeople","HW8","people","setPeople","finalPeople","Junior","JuniorPlus","PATH","Routes","path","exact","render","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7b6e864b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3WBqd\",\"person\":\"Message_person__1XwJD\",\"time\":\"Message_time__1o58L\",\"bubble\":\"Message_bubble__eYe_P\",\"bubbleLeft\":\"Message_bubbleLeft__3MkSY\",\"img\":\"Message_img__2ZG8w\",\"aimg\":\"Message_aimg__3WHz3\",\"aperson\":\"Message_aperson__2vAtd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1sYM4\",\"spanInput\":\"SuperInputText_spanInput__28niB\",\"errorInput\":\"SuperInputText_errorInput__SDXMT\",\"error\":\"SuperInputText_error__2ZEwo\",\"spanClass\":\"SuperInputText_spanClass__3cRop\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__1foWw\",\"error\":\"Greeting_error__1OFl-\",\"errorMessage\":\"Greeting_errorMessage__26o-i\",\"count\":\"Greeting_count__39Yjm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Error404_body__12Nv8\",\"h\":\"Error404_h__1lZUP\",\"message\":\"Error404_message__30tTY\",\"error404\":\"Error404_error404__3Ya6q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__38rKK\",\"superButton\":\"SuperButton_superButton__3v8Nt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__2A3Ni\",\"title\":\"Affairs_title__1Oo08\",\"body\":\"Affairs_body__1Jw9V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"HW4_column__2Niqp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__bk_C0\",\"spanClassName\":\"SuperCheckbox_spanClassName__22cbd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__Uff3t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navmenu\":\"HW5_navmenu__2_Tpk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superSelect\":\"SuperSelect_superSelect__2i0yw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superRadio\":\"SuperRadio_superRadio__M_VId\"};","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport s from \"./HW5.module.css\";\n\nfunction Header() {\n    return (\n        <div>\n            // add NavLinks\n            <nav className={s.navmenu}>\n                <NavLink to={\"/\"}>Home</NavLink>\n                <NavLink to={\"/pre-junior\"}>PreJunior</NavLink>\n                <NavLink to={\"/junior\"}>Junior</NavLink>\n                <NavLink to={\"/juniorplus\"}>JuniorPlus</NavLink>\n            </nav>\n\n        </div>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\nimport s from \"./Message.module.css\";\n\nexport type MessageType = {\n  avatar: string;\n  name: string;\n  message: string;\n  time: string;\n};\nexport function Message(props: MessageType) {\n  return (\n    <div className={s.message}>\n      <img className={s.img} src={props.avatar} />\n      <div className={s.bubble}>\n        <div className={s.bubbleLeft}>\n          <p className={s.person}>{props.name}</p>\n          <div>\n            <p>\n              {props.message}\n              <span className={s.time}>{props.time}</span>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\n","import React from \"react\";\nimport s from \"./Message.module.css\";\nimport {MessageType} from './Message' \n\nexport function AlternativeMessage(props: MessageType) {\n    return (\n      <div className={s.message}>\n        <img className={s.aimg} src={props.avatar} />\n        <div className={s.bubble}>\n          <div className={s.bubbleLeft}>\n            <p className={s.aperson}>{props.name}</p>\n            <div>\n              <p>\n                {props.message}\n                <span className={s.time}>{props.time}</span>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n","import React from \"react\";\nimport { Message } from \"./Message\";\nimport { AlternativeMessage } from \"./AlternativeMessage\";\nconst messageData = {\n  avatar:\n    \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\n  name: \"Masha\",\n  message: \"Hello, Vasya!\",\n  time: \"22:00\",\n};\nconst messageDataAlternative = {\n  avatar:\n    \"https://upload.wikimedia.org/wikipedia/commons/f/fe/Mark_Zuckerberg_em_setembro_de_2014.jpg\",\n  name: \"Mark\",\n  message: \"Ok! Say your price.\",\n  time: \"07:00\",\n};\n\nfunction HW1() {\n  return (\n    <div>\n      <hr />\n      homeworks 1{/*should work (должно работать)*/}\n      <Message\n        avatar={messageData.avatar}\n        name={messageData.name}\n        message={messageData.message}\n        time={messageData.time}\n      />\n      <hr />\n      {/* для личного творчества, могу проверить */}\n      <AlternativeMessage\n        avatar={messageDataAlternative.avatar}\n        name={messageDataAlternative.name}\n        message={messageDataAlternative.message}\n        time={messageDataAlternative.time}\n      />\n      <hr />\n    </div>\n  );\n}\n\nexport default HW1;\n","import React from \"react\";\nimport {AffairType} from \"./HW2\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback =  () => {props.deleteAffairCallback(props.affair._id)};// need to fix\n\n    return (\n        <div>\n                {`${props.affair.name} ${props.affair.priority}`}\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    );\n}\n\nexport default Affair;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.superButton : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React from \"react\";\nimport Affair from \"./Affair\";\nimport {AffairType, FilterType} from \"./HW2\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter('all')}; // need to fix\n    const setHigh = () => {props.setFilter('high')};\n    const setMiddle = () => {props.setFilter('middle')};\n    const setLow = () => {props.setFilter('low')};\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <SuperButton red onClick={setAll}>All</SuperButton>\n            <SuperButton red onClick={setHigh}>High</SuperButton>\n            <SuperButton red onClick={setMiddle}>Middle</SuperButton>\n            <SuperButton red onClick={setLow}>Low</SuperButton>\n        </div>\n    );\n}\n\nexport default Affairs;\n","import React, {useState} from \"react\";\nimport Affairs from \"./Affairs\";\nimport s from \"./Affairs.module.css\";\n\n\n// types\nexport type AffairPriorityType = \"high\" | \"middle\" | \"low\";\nexport type AffairType = {\n    _id: number;\n    name: string;\n    priority: string;\n  }; \nexport type FilterType = \"all\" | AffairPriorityType;\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n    {_id: 1, name: \"React\", priority: \"high\"},\n    {_id: 2, name: \"anime\", priority: \"low\"},\n    {_id: 3, name: \"games\", priority: \"low\"},\n    {_id: 4, name: \"work\", priority: \"high\"},\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\n];\n\n// pure helper functions\nexport const filterAffairs = (affairs:  Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === \"all\") return affairs;\n    if (filter === \"low\") return affairs.filter(affairs => affairs.priority === \"low\" );\n    if (filter === \"high\") return affairs.filter(affairs => affairs.priority === \"high\" );\n    if (filter === \"middle\") return affairs.filter(affairs => affairs.priority === \"middle\" );\n    else return affairs; // need to fix\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter(a => a._id !== _id); // need to fix\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // need to fix any\n    const [filter, setFilter] = useState<FilterType>(\"all\");\n\n    const filteredAffairs = filterAffairs(affairs, filter);\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); // need to fix any\n \n    return (\n        <div >\n            {/* <hr/> */}\n            <div className={s.title}>\n            homeworks 2\n            </div>\n            {/*should work (должно работать)*/}\n            <div className={s.body}>\n            <Affairs \n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n            </div>\n\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            {/* <hr/> */}\n        </div>\n    );\n}\n\nexport default HW2;\n","import React, {ChangeEvent} from \"react\";\nimport s from \"./Greeting.module.css\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n    setOnBlur: () => void\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers, setOnBlur} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.error : s.someClass; // need to fix with (?:)\n\n    return (\n        <div>\n            <input value={name} onClick={setOnBlur} onChange={setNameCallback} className={inputClass}/>\n            <span className={s.errorMessage}>{error}</span>\n            <SuperButton red onClick={addUser}>+</SuperButton>\n            <span className={s.count}>Количество пользователей: {totalUsers}</span>\n        </div>\n    );\n}\n\nexport default Greeting;\n","import React, {ChangeEvent, useState} from \"react\";\nimport Greeting from \"./Greeting\";\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: UserType[]; // need to fix any\n    addUserCallback: (name: string) => void; // need to fix any\n};\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => {\n    // деструктуризация пропсов\n    const [name, setName] = useState<string>(\"\"); // need to fix any\n    const [error, setError] = useState<string>(\"\"); // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        setName(e.currentTarget.value);\n        setError('')\n    };\n    const addUser = () => {\n        if (name.length > 0) {\n            addUserCallback(name);\n            alert(`Hello  ${name} !`); // need to fix\n        }\n        setError('ERROR')\n        setName('')\n    };\n\n    const setOnBlur = () => {\n        setError('')\n    }\n\n    const totalUsers = users.length; // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            setOnBlur={setOnBlur}\n            totalUsers={totalUsers}\n        />\n    );\n};\n\nexport default GreetingContainer;\n","import React, {useState} from \"react\";\nimport GreetingContainer from \"./GreetingContainer\";\nimport {v1} from 'uuid';\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any\n    console.log(users)\n    const addUserCallback = (name: string) => {\n        const newUser: UserType = {_id: v1(), name: name}\n        setUsers([newUser, ...users]); // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW3;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n        onChangeText && onChangeText(e.currentTarget.value);\n\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = ` ${s.superInput} ${error ? s.errorInput : ''} ${className ? className : ''}  `; // need to fix with (?:) and s.superInput\n\n    return (\n\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {useState, ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {        \n\n\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n\n\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChangeChecked && onChangeChecked(e.currentTarget.checked) \n        onChange && onChange(e)\n    }  \n      \n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {ChangeEvent, useState} from \"react\";\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\nimport s from \"./HW4.module.css\";\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\n\nfunction HW4() {\n    const [text, setText] = useState<string>(\"\");\n    const error = text ? \"\" : \"error\";\n    const showAlert = () => {\n        if (error) {\n            alert(\"введите текст...\");\n        } else {\n            alert(text); // если нет ошибки показать текст\n            setText('')\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false);\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\n    \n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                {/*should work (должно работать)*/}\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    className={s.input} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*should work (должно работать)*/}\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                {/*should work (должно работать)*/}\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}                    \n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW4;\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\nimport SuperInputText from \"../../../h4/common/c1-SuperInputText/SuperInputText\";\nimport s from \"../../../h4/common/c1-SuperInputText/SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n};\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false);\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\n\n    const onEnterCallback = () => {\n        setEditMode(false); // выключить editMode при нажатии Enter\n\n        onEnter && onEnter();\n    };\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false); // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e);\n    };\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true); // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e);\n    };\n\n    const spanClassName = `${s.spanClass} ${className}`;\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        // className={spanClassName}\n                        // className={s.superInput}\n                        className={spanClassName}\n                        {...restSpanProps}\n                    >\n\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    );\n}\n\nexport default SuperEditableSpan;\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state);\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    const stateAsString = localStorage.getItem(key);\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\n    return defaultState;\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// использование:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке \"test\"\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\n\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\n","import React, {useState} from \"react\";\nimport SuperEditableSpan from \"./common/c4-SuperEditableSpan/SuperEditableSpan\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport {restoreState, saveState} from \"./localStorage/localStorage\";\n\n\nfunction HW6() {\n    const [value, setValue] = useState<string>(\"\");\n\n    const save = () => {\n        saveState<string>(\"editable-span-value\", value);\n    };\n    const restore = () => {\n        setValue(restoreState(\"editable-span-value\", value));\n    };\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : \"enter text...\"}}\n                />\n            </div>\n            <SuperButton red onClick={save}>save</SuperButton>\n            <SuperButton red onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW6;\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\nimport HW6 from \"../../h6/HW6\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n        </div>\n    );\n}\n\nexport default PreJunior;\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from \"react\";\nimport s from \"./Error404.module.css\";\n\nfunction Error404() {\n    return (\n        <div className={s.body} >\n            <h1 className={s.h}>Nice Try, Kid.</h1>\n            <a className={s.message}>Page not found!</a>\n            <a className={s.error404}>404</a>\n        </div>\n\n    );\n}\n\nexport default Error404;\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from \"react\";\nimport s from \"./SuperSelect.module.css\"\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: string[]\n    onChangeOption?: (option: string) => void\n}\n\nexport const SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions: JSX.Element[] = options ? options.map((opt, key) => {\n        return <option value={opt} key={key}>{opt}</option>\n    }) : []; // map options with key\n\n    console.log(restProps)\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        // onChange, onChangeOption\n        onChangeOption && onChangeOption(e.currentTarget.value)\n        onChange && onChange(e)\n    }\n\n    return (\n        <select className={s.superSelect}\n                onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n    );\n}\n\nexport default SuperSelect;\n\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperRadio.module.css\"\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: string[]\n    onChangeOption?: (option: string) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // onChangeOption(mappedOptions);\n        onChangeOption && onChangeOption(e.currentTarget.value);\n        onChange && onChange(e);\n    }\n\n\n    const mappedOptions: JSX.Element[] = options ? options.map((o, i) => (\n        <label key={name + \"-\" + i}  >\n            <input\n                className={s.superRadio}\n                type={\"radio\"}\n                // name, checked, value,\n                onChange={onChangeCallback}\n                checked={o === value}\n                name={name}\n                value={o}\n            />\n            {o}\n        </label>\n    )) : [];\n    return (\n        <>\n            {mappedOptions}\n        </>\n    );\n}\n\nexport default SuperRadio;","import React, {ChangeEvent, useState} from \"react\";\nimport SuperSelect from \"./common/c5-SuperSelect/SuperSelect\";\nimport SuperRadio from \"./common/c6-SuperRadio/SuperRadio\";\n\nconst arr = [\"x\", \"y\", \"z\"];\n\nfunction HW7() {\n    const [value, onChangeOption] = useState<string>(arr[1]);\n\n    return (\n        <div>\n            <hr/>\n            homeworks 7\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperSelect\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                    // onChange={(e) => onChangeOption(e.currentTarget.value)}\n                />\n            </div>\n            <div>\n                <SuperRadio\n                    name={\"radio\"}\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                    // onChange={(e) => onChangeOption(e.currentTarget.value)}\n                />\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperSelect/>*/}\n            {/*<AlternativeSuperRadio/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW7;\n","import {Actions, initialPeopleType} from \"../HW8\";\n\nexport const homeWorkReducer = (state: initialPeopleType[], action: Actions): initialPeopleType[] => {\n    switch (action.type) {\n        case \"sort\": {\n            const copyState = [...state]\n            return copyState.sort((a, b) => {\n                if (action.payload === \"up\" ? a.name <= b.name : a.name >= b.name) {\n                    return -1\n                } else {\n                    return 1\n                }\n            })\n        }\n        case \"check\": {\n            return state.filter(p => p.age >= action.payload)\n        }\n        default:\n            return state\n    }\n};","import React, {useState} from \"react\";\nimport {homeWorkReducer} from \"./bll/homeWorkReducer\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\nexport type initialPeopleType = {\n    _id: number\n    name: string\n    age: number\n}\ntype sort = { type: \"sort\"; payload: \"up\" | \"down\"}\ntype check = { type: \"check\"; payload: number}\n\nexport type Actions = sort | check;\n\nlet initialPeople: initialPeopleType[] = [\n    {_id: 0, name: \"Кот\", age: 3},\n    {_id: 1, name: \"Александр\", age: 66},\n    {_id: 2, name: \"Коля\", age: 16},\n    {_id: 3, name: \"Виктор\", age: 44},\n    {_id: 4, name: \"Дмитрий\", age: 40},\n    {_id: 5, name: \"Ирина\", age: 55},\n]\nfunction HW8() {\n    const [people, setPeople] = useState(initialPeople);\n\n    const finalPeople = people.map(p => (\n        <div key={p._id}>\n            {/*some name, age*/}\n          <span>{p.name}, </span>\n          <span>{p.age}</span>\n        </div>\n    ))\n    const sortUp = () => setPeople(homeWorkReducer(initialPeople, {type: \"sort\", payload: \"up\"}))\n    const sortDown = () => setPeople(homeWorkReducer(initialPeople, {type: \"sort\", payload: \"down\"}))\n    const checkAge = () => setPeople(homeWorkReducer(initialPeople, {type: \"check\", payload: 18}))\n    return (\n\n        <div>\n            <hr/>\n            homeworks 8\n\n            {/*should work (должно работать)*/}\n\n            {finalPeople}\n            <SuperButton red onClick={sortUp}>sort up</SuperButton>\n            <SuperButton red onClick={sortDown}>sort down</SuperButton>\n            <SuperButton red onClick={checkAge}>check 18+</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativePeople/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW8;\n","import React from \"react\";\r\nimport HW7 from \"../../h7/HW7\";\r\nimport HW8 from \"../../h8/HW8\";\r\n\r\nexport function Junior() {\r\n    return <div>\r\n        <HW7/>\r\n        <HW8/>\r\n    </div>\r\n}","import React from \"react\";\r\n\r\nexport function JuniorPlus() {\r\n    return <div>\r\n        JuniorPlus\r\n    </div>\r\n}","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport PreJunior from \"./pages/PreJunior\";\nimport Error404 from \"./pages/Error404\";\nimport {Junior} from \"./pages/Junior\";\nimport {JuniorPlus} from \"./pages/JuniorPlus\";\n\nexport const PATH = {\n    PRE_JUNIOR: \"/pre-junior\",\n    JUNIOR: \"/junior\",\n    JUNIORPLUS: \"/juniorplus\",\n    // add paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n            {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\n            <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\n            <Route path={PATH.JUNIORPLUS} render={() => <JuniorPlus/>}/>\n                // add routes\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            <Route  render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div >\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Routes/>\n\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default HW5;\n","import React from \"react\";\nimport s from \"./App.module.css\";\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            <HW5/>\n\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}